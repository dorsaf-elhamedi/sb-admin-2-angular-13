{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\dorsa\\\\Desktop\\\\PartenaireDashboard\\\\dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {}\n\n  get isLoggedIn() {\n    return window.localStorage.getItem('loged') === 'true';\n  }\n\n  login() {\n    return _asyncToGenerator(function* () {\n      yield window.localStorage.setItem('loged', 'true');\n    })();\n  }\n\n  logout() {\n    return _asyncToGenerator(function* () {\n      yield window.localStorage.setItem('loged', 'false');\n    })();\n  }\n\n}\n\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\n\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/dorsa/Desktop/PartenaireDashboard/dashboard/src/app/Services/login.service.ts"],"names":["i0","LoginService","constructor","isLoggedIn","window","localStorage","getItem","login","setItem","logout","ɵfac","LoginService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG,CAAG;;AACH,MAAVC,UAAU,GAAG;AACb,WAAOC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,MAAhD;AACH;;AACKC,EAAAA,KAAK,GAAG;AAAA;AACV,YAAMH,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,EAAqC,MAArC,CAAN;AADU;AAEb;;AACKC,EAAAA,MAAM,GAAG;AAAA;AACX,YAAML,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,EAAqC,OAArC,CAAN;AADW;AAEd;;AAVqB;;AAY1BP,YAAY,CAACS,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIX,YAAV,GAAP;AAAmC,CAA1F;;AACAA,YAAY,CAACY,KAAb,GAAqB,aAAcb,EAAE,CAACc,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEd,YAAT;AAAuBe,EAAAA,OAAO,EAAEf,YAAY,CAACS,IAA7C;AAAmDO,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nexport class LoginService {\r\n    constructor() { }\r\n    get isLoggedIn() {\r\n        return window.localStorage.getItem('loged') === 'true';\r\n    }\r\n    async login() {\r\n        await window.localStorage.setItem('loged', 'true');\r\n    }\r\n    async logout() {\r\n        await window.localStorage.setItem('loged', 'false');\r\n    }\r\n}\r\nLoginService.ɵfac = function LoginService_Factory(t) { return new (t || LoginService)(); };\r\nLoginService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoginService, factory: LoginService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}